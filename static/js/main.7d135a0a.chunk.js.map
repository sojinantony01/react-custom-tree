{"version":3,"sources":["lib/child.js","lib/parent.js","lib/lib.js","lib/index.js","simple-tree.js","custom-tree.js","custom-tree-2.js","App.js","index.js"],"names":["Child","props","state","Custom","this","custom","className","onClick","onChidClick","data","name","Component","Parent","open","isDefaultOpen","setState","child","Tree","length","getParentsAndChild","map","d","noLeftMargin","parentComponent","childComponent","getTree","App","console","log","class","aria-hidden","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d135a0a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Child extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n\n\n    render() {\n        let Custom = this.props.custom\n        return  ( \n            <div className=\"\" onClick={() => this.props.onChidClick(this.props.data)}>\n                {this.props.custom ? <Custom {...this.props.data}/> : <div className=\"tree-child-component\"> {this.props.data.name} </div>}\n            </div>\n              \n        );\n    }\n}\n\n\nexport default Child;","import React, { Component } from 'react';\nimport Tree from './lib'\nclass Parent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open:props.isDefaultOpen ? true : false\n        };\n    }\n\n\n\n    render() {\n        let Custom = this.props.custom\n        return  ( \n            <div className=\"\" >\n                <div onClick={() => this.setState({open : !this.state.open})}>\n                {this.props.custom ? <Custom {...this.props.data} open={this.state.open}/> : \n                    <div className=\"tree-parent-component\">\n                        <span >{this.state.open ? '-' : '+'}</span>\n                        <span>{this.props.data.name}</span>\n                    </div>\n                }\n                </div>\n                {this.state.open && <Tree {...this.props} data={this.props.data.child} />}\n            </div>\n              \n        );\n    }\n}\n\n\nexport default Parent;","import React, { Component } from 'react';\nimport Child from './child';\nimport Parent from './parent';\nclass Tree extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open:false\n        };\n    }\n\n    getTree(data) {\n        if(data && data.length) {\n            return this.getParentsAndChild(data)\n        }\n        return <p></p>\n\n    }\n    getParentsAndChild(data) {\n        return data.map(d => {\n            if(d.child && d.child.length) {\n                return  (\n                    <div className={this.props.noLeftMargin ? '' : 'tree-margin-left-15'}>\n                        <Parent {...this.props} data={d} custom={this.props.parentComponent} />\n                    </div>  \n                    )\n            } else {\n                return (\n                    <div className={this.props.noLeftMargin ? '' : 'tree-margin-left-15'}>\n                        <Child onChidClick={this.props.onChidClick} data={d} custom={this.props.childComponent}/>\n                    </div>\n                )\n            }\n        })\n    }\n\n\n    render() {\n        return  ( \n            <div className=\"\">\n                { this.getTree(this.props.data)}\n            </div>\n              \n        );\n    }\n}\n\n\nexport default Tree;","import Tree from './lib';\nimport './tree.css'\nexport default Tree;","import React, { Component } from 'react'\nimport Tree from './lib'\nimport data from './data.json'\n\n\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n       \n      };\n  }\n\n  render() {\n    return (<div className=\"tree-sample\">\n      <Tree\n        data={data}\n        onChidClick={(child) => console.log(child)}\n        isDefaultOpen={this.props.open}\n        />\n                            \n    </div>)\n  }\n}\n\nexport default App;","import React, { Component } from 'react'\nimport Tree from './lib';\nimport data from './data.json'\n\n\nconst Child = props => <div className='custom-child'>{props.name}</div>\n\nclass Parent extends Component {\n  constructor(props) {\n     super(props);\n     this.state = {\n      \n     };\n }\n render () {\n    return (\n      <div className=\"custom-parent\">\n        <span className=\"custom-open-icon\">\n          {this.props.open ? <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i> : <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>}\n        </span>\n        {this.props.name}\n      </div>\n    )\n }\n}\n\n\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n       \n      };\n  }\n\n  render() {\n    return (<div className=\"tree-sample\">\n      <Tree\n        data={data}\n        onChidClick={(child) => console.log(child)}\n        parentComponent={Parent}\n        childComponent={Child}\n        />\n                            \n    </div>)\n  }\n}\n\nexport default App;","import React, { Component } from 'react'\nimport Tree from './lib';\nimport data from './data.json'\n\n\nconst Child = props => <div className='custom-child-2'>{props.name}</div>\n\nclass Parent extends Component {\n  constructor(props) {\n     super(props);\n     this.state = {\n     };\n }\n render () {\n    return (\n      <div className=\"custom-parent-2\">\n        {this.props.name}\n        <span className=\"custom-open-icon-2  font-22\">\n          {this.props.open ? <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i> : <i class=\"fa fa-caret-right\" aria-hidden=\"true\"></i>}\n        </span>\n      </div>\n    )\n }\n}\n\n\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        noLeftMargin:true\n      };\n  }\n\n  render() {\n    return (<div className=\"tree-sample\">\n      <button onClick={() => this.setState({noLeftMargin: !this.state.noLeftMargin})}>{this.state.noLeftMargin ? 'Add' : 'Remove'} left margin</button>\n      <Tree\n        data={data}\n        onChidClick={(child) => console.log(child)}\n        parentComponent={Parent}\n        childComponent={Child}\n        noLeftMargin={this.state.noLeftMargin}\n        />\n                            \n    </div>)\n  }\n}\n\nexport default App;","import React, { Component } from 'react'\nimport SimpleTree from './simple-tree';\nimport CustomTree from './custom-tree';\nimport CustomTreeTwo from './custom-tree-2';\nimport './app.css'\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n       \n      };\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2>Simple Usage</h2>\n        <SimpleTree />\n        <h2>Default Open</h2>\n        <SimpleTree open/>\n        <h2>Custom Parent & Child Component 1</h2>   \n        <CustomTree />\n        <h2>Custom Parent & Child Component 2</h2>   \n        <CustomTreeTwo />\n\n      </div>)\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}